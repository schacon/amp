command :import do |c|
  c.workflow :hg
  c.desc "Import an ordered set of patches"
  c.help <<-EOS
amp import [options]+ [FILE]+
  
  Import a list of patches and commit them individually.

  If there are outstanding changes in the working directory, import
  will abort unless given the -f flag.

  You can import a patch straight from a mail message. Even patches
  as attachments work (body part must be type text/plain or
  text/x-patch to be used). From and Subject headers of email
  message are used as default committer and commit message. All
  text/plain body parts before first diff are added to commit
  message.

  If the imported patch was generated by amp export, user and description
  from patch override values from message headers and body. Values
  given on command line with -m and -u override these.

  If --exact is specified, import will set the working directory
  to the parent of each patch before applying it, and will abort
  if the resulting changeset has a different ID than the one
  recorded in the patch. This may happen due to character set
  problems or other deficiencies in the text patch format.

  With --similarity, amp will attempt to discover renames and copies
  in the patch in the same way as 'addremove'.

  To read a patch from standard input, use patch name "-".
  
  Where options are:
EOS
  
  c.on_run do |opts, args|
    require 'date'
    
    repo = opts[:repository]
    patches = args
    
    opts[:date] &&= DateTime.parse(opts[:date])
    opts[:similarity] = Float(opts[:similarity] || 0)
    
    if opts[:similarity] < 0 || opts[:similarity] > 100
      raise AbortError.new('similarity must be between 0 and 100')
    end
    
    if opts[:exact] || !opts[:force]
      raise AbortError.new("Outstanding changes or uncommitted merges exist") if repo.changed?
    end
    
    d     = opts[:base]
    strip = opts[:strip]
    
  end  # end on_run
end