!!! 1.1
%html{ :xmlns => "http://www.w3.org/1999/xhtml" }
  %head
    %meta{ :content => "text/html; charset=UTF-8", "http-equiv" => "Content-Type" }
    %title
      Amp | Version Control Revolution
    = stylesheets :reset, :amp, :all_themes
    = javascripts "jquery-1.3.2.min.js", "jquery.cookie.js"
  %body.oneColFixCtr
    = render("include/_header.haml", :selected => "home")
    #container
      .body-width
        .floatleft{ :style => "width:100%; padding:8px 0em 6px;"}
          .floatleft{ :style => "width: 50%; margin-left: 25%;" }
            .rounded.bigbox.pink
              %h1#latest-version
                Get Amp
                %span.red-text v0.2.3
              %ul{:style => "margin-left:2px;"}
                %li== 1. Get #{ruby_link}. 2. sudo gem install #{blue_amp} --no-wrappers
        .floatleft{ :style => "width:100%;padding:10px 0em 6px;" }
          .floatleft{ :style => "width: 45%;" }
            %span.section-header== What is #{blue_amp("Amp:")}
            .rounded.bigbox.half-border{:style => "padding-bottom:30px;"}
              %p
                == #{blue_amp "Amp"} aims to change the way we approach VCS.
                %br/
                == #{blue_amp "Amp"} is:
              %ul.bullets
                %li== #{hg_link} in #{link_to "http://www.ruby-lang.org/", "Ruby"}. 100% compatible with hg.
                %li== Uniquely #{link_to "/about/customization.html", "customizable"}
                %li== Superbly #{link_to "/docs/", "documented"} with #{yard_link "YARD"}
                %li== Free and Open-Source (#{link_to "http://www.gnu.org/licenses/gpl-2.0.html", "GPLv2"})
                %li== #{link_to "/about/performance.html", "Performance"} Focused
                %li Dependency-free (you just need Ruby!)
          .floatleft{ :style => "width: 53%; margin-left:14px;" }
            %span.section-header
              ==Big Plans for #{blue_amp "Amp:"}
            .rounded.bigbox.half-border
              %p
                ==#{blue_amp "Amp"} has bigger dreams. Here’s what we <em>want</em> to do:
              %ul.bullets
                %li
                  == #{git_link}, #{link_to "http://bazaar-vcs.org/", "bazaar"}, #{link_to "http://subversion.tigris.org/", "svn"}, #{link_to "http://www.nongnu.org/cvs/", "cvs" }, #{link_to "http://darcs.net/", "darcs" } In #{link_to "http://www.ruby-lang.org/", "Ruby" }. 100% Compatible.
                %li Common API to all repository formats.
                %li== #{link_to "about/commands.html", "Command system"} independent of repository format
                %li Workflows matching each major VCS system
                %li== Run on #{link_to "http://www.microsoft.com/en/us/default.aspx", "Windows" }
                %li== Demonstrate Ruby #{link_to "about/performance.html", "performance"}
                %li A GUI application on top of all these features
              %p
                == Ambitious? Perhaps. That’s why #{link_to "contribute/", "we'd like your help"}.
        .floatleft{ :style => "width:100%;padding:6px 0em 6px 0em;" }
          .floatleft{ :style => "width: 62%;" }
            %span.section-header== Why #{blue_amp "Amp?"}
            .rounded.bigbox
              %p== #{blue_amp "Amp"} is unlike any other VCS software to date. #{blue_amp "Amp"}'s novel command system gives you the flexibility to customize and personalize the way you develop software. Create in your own workspace with full #{hg_link} compatibility, and no external dependencies.
            .rounded.bigbox.dark{ :style => "margin-top:16px;" }
              :syntaxhighlighter
                command "echo" do |c|
                  c.opt :noline, "Don't append newline", :short => "-n"
                  c.on_run do |opts, args|
                    print args.join(" ")
                    print "\n" unless opts[:noline]
                  end
                end
            .rounded.bigbox.teal{ :style => "margin-top:0px;" }
              %p
                ==Adds a new command to #{blue_amp}. Usage:
                %tt amp echo Hello World.
                == Once this is in your #{ampfile_link}, it’s usable in amp. #{link_to "about/commands.html", "Learn More"}
          .floatleft{ :style => "width: 38%;margin-top:25px;" }
            .rounded.bigbox.dark
              :syntaxhighlighter
                command "status" do |c|
                  c.default :"no-color", true
                end
            .rounded.bigbox.teal{ :style => "margin-top:0px; margin-bottom:8px;" }
              %p
                Don’t like how a command works out-of-the-box? Change the default settings. It’s almost not even code.
            .rounded.bigbox.dark{ :style => "margin-top:8px; margin-bottom:0px;" }
              :syntaxhighlighter
                command :push do |c|
                  c.before { system "rake test" }
                end
            .rounded.bigbox.teal{ :style => "margin-top:0px;" }
              %p
                == This one's from our own #{ampfile_link}. Run tests before every push. If your tests fail, no push.
        .floatleft{ :style => "width:100%; padding:1em 0em 6px;" }
          .floatleft{ :style => "width: 81%;margin-left:9.5%;" }
            %span.section-header
              == Developing #{blue_amp "Amp:"}
            .rounded.bigbox
              %p== There's a lot we want to do, and #{blue_amp} needs developers. Want to help? Here's how #{blue_amp} rolls:
              %ul.bullets
                %li
                  %span.shellscript hg clone http://bitbucket.org/carbonica/amp/
                %li Make your changes
                %li
                  %span.shellscript hg diff -r rev1 -r rev2 -U 3 > your.patch
                %li Create ticket on #{lighthouse_link "Lighthouse, attach your patch"}
                %li Land one patch, you get commit rights
              %p== Want more details? Check out our #{link_to "/contribute/", "contributing page." } Or join us at #{link_to "irc://irc.freenode.net/#amp", "#amp on freenode" }.
    = render("include/_footer.haml")
    :plain
      <script type="text/javascript">
      var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
      document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
      </script>
      <script type="text/javascript">
      try {
      var pageTracker = _gat._getTracker("UA-11746178-1");
      pageTracker._setDomainName(".carboni.ca");
      pageTracker._trackPageview();
      } catch(err) {}</script>